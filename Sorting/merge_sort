void merge(int *v, int p, int q, int r, int *buffer) {
    int i = p, j = (q + 1), k = 0;
    while (i <= q && j <= r) {
        if (v[i] <= v[j]){
            buffer[k] = v[i];
            i++;
        }
        else{
            buffer[k] = v[j];
            j++;
        }
        k++;
    }
    while (i <= q){
        buffer[k] = v[i];
        i++;
        k++;
    }
    while (j <= r){
        buffer[k] = v[j];
        j++;
        k++;
    }
    for (k = p; k <= r; k++){
        v[k] = buffer[k - p];
    }
}

/* Ordina la porzione di array compresa tra gli indici p e r (inclusi) */
void merge_sort(int *v, int p, int r, int *buffer) {
    if (p < r){
        int half = (p + r) / 2;
        merge_sort(v, p, half, buffer);
        merge_sort(v, half + 1, r, buffer);
        merge(v, p, half, r, buffer);
    }
}